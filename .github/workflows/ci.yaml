name: CI Workflow

on:
  push:
    branches: 
      - "main"
  pull_request:
    branches: 
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: db_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5

    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DJANGO_SETTINGS_MODULE: moinscestbien.settings
      FRONT_BASE_URL: ${{ secrets.FRONT_BASE_URL }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DJANGO_ALLOWED_HOSTS: 127.0.0.1
      DJANGO_DEBUG: True
      DJANGO_EMAIL_BACKEND: django.core.mail.backends.smtp.EmailBackend
      DJANGO_EMAIL_HOST: mailhog
      DJANGO_EMAIL_PORT: 1025
      DJANGO_DEFAULT_FROM_EMAIL: ${{ secrets.DJANGO_DEFAULT_FROM_EMAIL }}
      DJANGO_CONTACT_EMAIL: ${{ secrets.DJANGO_CONTACT_EMAIL }}
      DJANGO_EMAIL_HOST_PASSWORD:
      DJANGO_EMAIL_USE_TLS: False
      DJANGO_EMAIL_USE_SSL: False
      DJANGO_EMAIL_HOST_USER:
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        working-directory: ./backend
        run: python manage.py migrate

      - name: Run Backend Tests
        working-directory: ./backend
        run: pytest --cov=.

      - name : Lint Backend Code
        working-directory: ./backend
        run: black --check .
      
      - name: Start Backend
        working-directory: ./backend
        run: |
          python manage.py runserver --noreload --nothreading &
          sleep 5
        
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Lint Frontend Code
        working-directory: ./frontend
        run: npm run lint

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build
